import Head from "next/head";
import { useEffect } from "react";
import { BsTelephoneX } from "react-icons/bs";
import io from 'socket.io-client';

export default function Home() {
  function handleStartCall() {
    const socket = new WebSocket("ws://localhost:8080");
    socket.onmessage = (event) => {
      console.log(event.data);

      // Create an audio context
      const audioContext = new (window.AudioContext || window.AudioContext)();
      const source = audioContext.createBufferSource();

      // Decode audio data
      audioContext.decodeAudioData(event.data, (buffer) => {
        source.buffer = buffer;
        source.connect(audioContext.destination);
        source.start(0);
      });
    };
  }

  useEffect(() => {
    const socket = io();

    // Inicializa o WebRTC para captura e envio de 치udio
    navigator.mediaDevices
      .getUserMedia({ audio: true })
      .then((stream) => {
        const audioContext = new AudioContext();
        const input = audioContext.createMediaStreamSource(stream);

        // Conectar a entrada de 치udio ao Socket.IO
        socket.emit("audio", stream);

        // Evento para transmitir 치udio para o servidor
        input.connect(audioContext.destination);

        // Receber 치udio de outros clientes
        socket.on("audio", (data) => {
          const audioBuffer = audioContext.createBuffer(
            1,
            data.length,
            audioContext.sampleRate
          );
          audioBuffer.getChannelData(0).set(data);

          const source = audioContext.createBufferSource();
          source.buffer = audioBuffer;
          source.connect(audioContext.destination);
          source.start();
        });
      })
      .catch((err) => {
        console.error("Erro ao acessar o microfone:", err);
      });
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <script src="/socket.io/socket.io.js"></script>
      </Head>
      <div className="container">
        <div className="main-content">
          <div className="buttons-content">
            <button className="button-start-call" onClick={handleStartCall}>
              <BsTelephoneX className="phone" />
            </button>
          </div>
        </div>
      </div>
    </>
  );
}
